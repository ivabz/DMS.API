
<header>
    <div class="content-wrapper">
        <div class="float-left">
            <p class="site-title">
                <a href="~/">Defect Management System</a></p>
            <br />
        </div>
    </div>
</header>

<div id="body">
    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h1>DMS Admin Console </h1>
                <h3>An Admin interface to manage your users for Defect management system</h3>
            </hgroup>
            <p> Build on the Top of DMS Web API, 
               DMS  Admin helps you administrate User roles (Add/Update/Delete) through this web interface.
            </p>
            <p></p>
        </div>
    </section>
    <section class="content-wrapper main-content clear-fix">
        <div class="errorMessage "></div>
        <br />
        @*<button data-bind="click: GetUsers()"> Get Users</button>*@

        <form>
            <table>
                <tr>
                    <td>
                        <!--Bind the TextBoxes in the Table to the observable properties defined into the ViewModel -->
                        <table id="tbldml">
                            <tr>
                                <td>ID</td>
                                <td>
                                    <input type="text" id="ID" data-bind="value: $root.ID" /></td>
                            </tr>
                            <tr>
                                <td>First_Name</td>
                                <td>
                                    <input type="text" id="First_Name" data-bind="value: $root.First_Name" /></td>
                            </tr>
                            <tr>
                                <td>Last_Name</td>
                                <td>
                                    <input type="text" id="Last_Name" data-bind="value: $root.Last_Name" /></td>
                            </tr>
                            <tr>
                                <td>Login_Id</td>
                                <td>
                                    <input type="text" id="Login_Id" data-bind="value: $root.Login_Id" /></td>
                            </tr>
                            <tr>
                                <td>Password</td>
                                <td>
                                    <input type="text" id="Password" data-bind="value: $root.Password" />
                                </td>
                            </tr>
                            <tr>
                                <td>Role</td>
                                <td>
                                    <input type="text" id="Role" data-bind="value: $root.Role" />
                                </td>
                            </tr>
                            <tr>
                                <!--The click binding has the JavaScirpt methods passed to it-->
                                <td>
                                    <button data-bind="click :$root.save">Save</button></td>
                                <td>
                                    <button data-bind="click: $root.update">Update</button></td>
                            </tr>
                        </table>
                    </td>
                    <td>
                        <div class="FixedContainer">
                            <!--If the lenght of the Users is greater than 0 then visible the Table-->
                            <table data-bind="visible: Users().length>0">
                                <thead>
                                    <tr>
                                        <td>ID</td>
                                        <td>First_Name</td>
                                        <td>Last_Name</td>
                                        <td>Login_Id</td>
                                        <td>Role</td>
                                        <td></td>
                                    </tr>
                                </thead>
                                <!--Iterate through an observableArray using foreach-->
                                <tbody data-bind="foreach:  Users">
                                    <tr data-bind="click: $root.getselecteduser" id="updtr">
                                        <td><span data-bind="text: ID"></span></td>
                                        <td><span data-bind="text: First_Name"></span></td>
                                        <td><span data-bind="text: Last_Name"></span></td>
                                        <td><span data-bind="text: Login_Id"></span></td>
                                        <td><span data-bind="text: Role"></span></td>
                                        <td>
                                            <button data-bind="click: $root.deleterec">Delete</button>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </td>
                </tr>
            </table>
        </form>
    </section>
</div> 


@section Scripts {
  <script type="text/javascript" src="@Url.Content("~/Scripts/knockout-2.1.0.js")"></script>
    <script type="text/javascript">
        var userinfoViewModel = function () {
            var self = this;
            self.ID = ko.observable("0");
            self.First_Name = ko.observable("");
            self.Last_Name = ko.observable("");
            self.Login_Id = ko.observable("");
            self.Password = ko.observable("");
            self.Role = ko.observable("");

            var user = {
                ID: self.ID,
                First_Name: self.First_Name,
                Last_Name: self.Last_Name,
                Login_Id: self.Login_Id,
                Password: self.Password,
                Role: self.Role
            };

            //Declare an ObservableArray for Storing the JSON Response
            self.Users = ko.observableArray([]);

            //Function to Read All Users
            function GetUsers() {
                //Ajax Call Get All Employee Records
                $.ajax({
                    type: "GET",
                    url: "/api/user",
                    contentType: "application/json",
                    dataType: "json",
                    success: function (data) {
                        self.Users(data); //Put the response in ObservableArray
                    },
                    error: function (error) {
                        alert(error.status + "<--and--> " + error.statusText);
                    }
                });
                //Ends Here
            }


            //call GetUsers Ajax call.
            GetUsers();

            //CRUD Operations

            //Function to perform POST (insert User) operation
            self.save = function (data) {
                //Ajax call to Insert the User
                $.ajax({
                    type: "POST",
                    url: "/api/user",
                    data: ko.toJSON(data), //Convert the Observable Data into JSON
                    contentType: "application/json",
                    success: function (data) {
                        alert("Record Added Successfully");
                        self.First_Name(data.First_Name);
                        alert("The New USer Name :" + self.First_Name());
                        GetUsers();
                    },
                    error: function () {
                        alert("Failed");
                    }
                });
                //Ends Here
            };

            self.update = function (data) {
                var url = "/api/user/";
                $.ajax({
                    type: "PUT",
                    url: url,
                    data: ko.toJSON(data),
                    contentType: "application/json",
                    success: function (data) {
                        alert("Record Updated Successfully");
                        GetUsers();
                    },
                    error: function (error) {
                        alert(error.status + "<!----!>" + error.statusText);
                    }
                });
            };

            //Function to perform DELETE Operation
            self.deleterec = function (user) {
                $.ajax({
                    type: "DELETE",
                    url: "/api/user/",
                    data: ko.toJSON(user),
                    contentType: "application/json",
                    success: function (user) {
                        alert("Record Deleted Successfully");
                        GetUsers();//Refresh the Table
                    },
                    error: function (error) {
                        alert(error.status + "<--and--> " + error.statusText);
                    }
                });
                // alert("Clicked" + employee.EmpNo)
            };

           
            //Function to Display record to be updated
            self.getselecteduser = function (user) {
                self.ID(user.ID),
                self.First_Name(user.First_Name),
                self.Last_Name(user.Last_Name),
                self.Login_Id(user.Login_Id),
                self.Password(user.Password),
                self.Role(user.Role)
            };
        };
        ko.applyBindings(new userinfoViewModel());
    </script>
}
